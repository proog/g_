angular.module("games",["ngRoute","ngResource","ngCookies","lr.upload","ui.bootstrap","angular-loading-bar"]).config(["$routeProvider","cfpLoadingBarProvider",function($routeProvider,loadingBarProvider){$routeProvider.when("/:userId?/:gameId?",{templateUrl:"content.html",controller:"gamesCtrl",controllerAs:"ctrl"}).otherwise({redirectTo:"/"});loadingBarProvider.latencyThreshold=500;loadingBarProvider.includeSpinner=false}]).run(["$rootScope","$modalStack",function($rootScope,$modalStack){$rootScope.$on("$routeChangeSuccess",function(){$modalStack.dismissAll()})}]);angular.module("games").controller("formCtrl",["$scope","$modalInstance","game","gameService","Games",function($scope,$modalInstance,game,gameService,Games){$scope.initialize=function(){$scope.genres=gameService.genres;$scope.platforms=gameService.platforms;$scope.tags=gameService.tags;$scope.gameService=gameService;$scope.error=null;$scope.externalImageUrl=null;$scope.STATE_DEFAULT=0;$scope.STATE_ON_WISHLIST=1;$scope.STATE_IN_QUEUE=2;$scope.STATE_CURRENTLY_PLAYING=3;if(game){$scope.isNew=false;$scope.model=angular.copy(game);if($scope.model.currently_playing)$scope.state=$scope.STATE_CURRENTLY_PLAYING;else if($scope.model.queue_position!=null)$scope.state=$scope.STATE_IN_QUEUE;else if($scope.model.wishlist_position!=null)$scope.state=$scope.STATE_ON_WISHLIST;else $scope.state=$scope.STATE_DEFAULT}else{$scope.isNew=true;$scope.state=$scope.STATE_DEFAULT;$scope.model={title:null,developer:null,publisher:null,year:null,comment:null,sort_as:null,finished:gameService.NOT_FINISHED,playtime:null,rating:null,currently_playing:false,queue_position:null,hidden:false,wishlist_position:null,genre_ids:[],platform_ids:[],tag_ids:[]}}var maxPos;if($scope.model.queue_position!=null){$scope.originalQueuePosition=$scope.model.queue_position}else{maxPos=gameService.games.reduce(function(ret,game){return game.queue_position!=null?Math.max(game.queue_position,ret):ret},-1);$scope.originalQueuePosition=maxPos+1}if($scope.model.wishlist_position!=null){$scope.originalWishlistPosition=$scope.model.wishlist_position}else{maxPos=gameService.games.reduce(function(ret,game){return game.wishlist_position!=null?Math.max(game.wishlist_position,ret):ret},-1);$scope.originalWishlistPosition=maxPos+1}};$scope.genreClick=function(genreId){var pos=$scope.model.genre_ids.indexOf(genreId);if(pos>-1)$scope.model.genre_ids.splice(pos,1);else $scope.model.genre_ids.push(genreId)};$scope.platformClick=function(platformId){var pos=$scope.model.platform_ids.indexOf(platformId);if(pos>-1)$scope.model.platform_ids.splice(pos,1);else $scope.model.platform_ids.push(platformId)};$scope.tagClick=function(tagId){var pos=$scope.model.tag_ids.indexOf(tagId);if(pos>-1)$scope.model.tag_ids.splice(pos,1);else $scope.model.tag_ids.push(tagId)};$scope.clearImageInput=function(){if($scope.image&&$scope.image[0].files.length>0||$scope.externalImageUrl){for(var i=0;i<$scope.image.length;i++){try{$scope.image[i].value="";if($scope.image[i].value){$scope.image[i].type="text";$scope.image[i].type="file"}}catch(e){}}$scope.filename=null;$scope.externalImageUrl=null}else if(!$scope.isNew&&$scope.model.image){var dialog=confirm("Do you want to deleted the image for "+$scope.model.title+"? This cannot be undone.");if(!dialog)return;game.deleteImage()}};$scope.titleChanged=function(){if($scope.model.title)$scope.model.sort_as=$scope.model.title.replace(/^The\s|A\s|An\s/,"");else $scope.model.sort_as=null};$scope.yearButtonClicked=function(){$scope.model.year=(new Date).getFullYear()};$scope.fileChanged=function(){$scope.$apply(function(){if($scope.image&&$scope.image[0]&&$scope.image[0].files&&$scope.image[0].files.length>0){$scope.filename=$scope.image[0].files[0].name}else{$scope.filename=null}})};$scope.currentlyPlayingClicked=function(){$scope.model.currently_playing=true;$scope.model.queue_position=null;$scope.model.wishlist_position=null};$scope.inQueueClicked=function(){$scope.model.currently_playing=false;$scope.model.queue_position=$scope.originalQueuePosition;$scope.model.wishlist_position=null};$scope.onWishlistClicked=function(){$scope.model.currently_playing=false;$scope.model.queue_position=null;$scope.model.wishlist_position=$scope.originalWishlistPosition;$scope.model.finished=gameService.NOT_FINISHED;$scope.model.rating=null;$scope.model.playtime=null};$scope.defaultClicked=function(){$scope.model.currently_playing=false;$scope.model.queue_position=null;$scope.model.wishlist_position=null};$scope.formSubmit=function(){var handleImage=function(){if($scope.image&&$scope.image[0].files.length>0){game.uploadImage($scope.image).then(function(){$modalInstance.close()},function(response){$scope.error=response.data.message})}else if($scope.externalImageUrl){game.uploadExternalImage($scope.externalImageUrl).then(function(){$modalInstance.close()},function(response){$scope.error=response.data.message})}else{$modalInstance.close()}};if(!$scope.model.rating||$scope.model.rating.length==0)$scope.model.rating=null;if($scope.isNew){game=new Games($scope.model);game.$save({userId:gameService.authenticatedUser.id},function(){gameService.games.push(game);handleImage()},function(response){$scope.error=response.data.message})}else{var g=new Games($scope.model);g.$update(function(data){angular.copy(data,game);handleImage()},function(response){$scope.error=response.data.message})}};$scope.deleteClick=function(){var dialog=confirm("Are you sure you want to delete "+$scope.model.title+"?");if(!dialog)return;game.$delete(function(){var pos=gameService.games.indexOf(game);if(pos>-1)gameService.games.splice(pos,1);$modalInstance.close()},function(response){$scope.error=response.data.message})};$scope.cancelClick=function(){$modalInstance.dismiss()};$scope.closeAlert=function(){$scope.error=null};$scope.getSuggestions=function(search){return gameService.assistedCreationSearch(search)};$scope.suggestionSelected=function(id){gameService.assistedCreationGetGame(id).then(function(data){$scope.model.title=data.title;$scope.titleChanged();$scope.model.developer=data.developer;$scope.model.publisher=data.publisher;$scope.model.year=data.year;if(data.genre_ids.length>0){$scope.model.genre_ids=data.genre_ids}if(data.platform_ids.length>0){$scope.model.platform_ids=data.platform_ids}if(data.image_url){$scope.externalImageUrl=data.image_url;$scope.filename=data.image_url}})};$scope.initialize()}]);angular.module("games").controller("gamesCtrl",["$scope","$routeParams","$route","$q","$location","upload","$modal","$filter","Games","Genres","Platforms","Tags","Users","gameService","$cookies","searchFilter","$timeout",function($scope,$routeParams,$route,$q,$location,upload,$modal,$filter,Games,Genres,Platforms,Tags,Users,gameService,$cookies,searchFilter,$timeout){"use strict";var self=this;self.countFinished=function(){return gameService.countFinished()};self.countFinishedPct=function(){return gameService.countFinishedPct()};self.isInSuggestions=function(game){return gameService.isInSuggestions(game)};self.addClick=function(){self.openGameForm(null)};self.editClick=function(game){self.openGameForm(game)};self.openGameForm=function(game){var modalInstance=$modal.open({templateUrl:"form.html",controller:"formCtrl",size:"lg",backdrop:"static",resolve:{game:function(){return game}}});modalInstance.result.then(function(){self.updateChart()})};self.manageGenresClick=function(){self.openManageForm(Genres,gameService.genres,"genre")};self.managePlatformsClick=function(){self.openManageForm(Platforms,gameService.platforms,"platform")};self.manageTagsClick=function(){self.openManageForm(Tags,gameService.tags,"tag")};self.openManageForm=function(Entities,items){var modalInstance=$modal.open({templateUrl:"manage.html",controller:"manageFormCtrl",backdrop:"static",resolve:{Entities:function(){return Entities},items:function(){return items}}});modalInstance.result.then(function(){self.updateChart()})};self.manageQueueClick=function(){self.openReorderForm("queue_position")};self.manageWishlistClick=function(){self.openReorderForm("wishlist_position")};self.openReorderForm=function(property){var modalInstance=$modal.open({templateUrl:"queue.html",controller:"queueFormCtrl",size:"sm",backdrop:"static",resolve:{games:function(){var filterObject={};filterObject[property]="!!";return $filter("filter")(gameService.games,filterObject)},property:function(){return property}}});modalInstance.result.then(function(){self.updateChart()})};self.pageChanged=function(){self.offset=self.currentPage*self.itemsPerPage-self.itemsPerPage};self.loginClick=function(){$modal.open({templateUrl:"login.html",controller:"loginFormCtrl",size:"sm",backdrop:"static"})};self.logoutClick=function(){gameService.logOut()};self.aboutClick=function(){$modal.open({templateUrl:"about.html",size:"sm",backdrop:"static"})};self.settingsClick=function(){$modal.open({templateUrl:"settings.html",controller:"settingsFormCtrl",size:"md",backdrop:"static"})};self.viewChanged=function(view){if(view!=self.GRID_VIEW&&view!=self.LIST_VIEW)return;self.view=view;$cookies.view=view;$timeout(function(){self.updateChart()},500)};self.gameSelected=function(game,scroll){self.selectedGame=game;if(scroll)self.scrollToGame(game)};self.openLinkDialog=function(game){$modal.open({templateUrl:"link.html",controller:"linkCtrl",size:"sm",backdrop:"static",resolve:{url:function(){var protocol=$location.protocol()+"://";var host=$location.host();var port=$location.port()!=80?":"+$location.port():"";var path=window.location.pathname;var userId="#/"+self.userId;var gameId="/"+game.id;return protocol+host+port+path+userId+gameId}}})};self.changeUser=function(user){if(user.id==self.userId)return;gameService.resetAll();$location.path("/"+user.id)};self.canShowAuthenticatedMenuItems=function(){return gameService.authenticated&&gameService.authenticatedUser.id==self.userId&&gameService.initialized};self.initFilter=function(){var yearGroup="Year";var ratingGroup="Rating";var miscGroup="Miscellanous";self.filterOptions=[{name:"Title contains",value:gameService.FILTER_TITLE,group:miscGroup},{name:"Completion is",value:gameService.FILTER_COMPLETION,group:miscGroup},{name:"Platform is",value:gameService.FILTER_PLATFORM,group:miscGroup},{name:"Genre is",value:gameService.FILTER_GENRE,group:miscGroup},{name:"Tag is",value:gameService.FILTER_TAG,group:miscGroup},{name:"Year is exactly",value:gameService.FILTER_YEAR,group:yearGroup},{name:"Year is at least",value:gameService.FILTER_YEAR_MIN,group:yearGroup},{name:"Year is at most",value:gameService.FILTER_YEAR_MAX,group:yearGroup},{name:"Rating is exactly",value:gameService.FILTER_RATING,group:ratingGroup},{name:"Rating is at least",value:gameService.FILTER_RATING_MIN,group:ratingGroup},{name:"Rating is at most",value:gameService.FILTER_RATING_MAX,group:ratingGroup}]};self.addQueryParameter=function(){self.query.parameters.push({type:null,value:null,negate:false})};self.removeQueryParameter=function(parameter){var pos=self.query.parameters.indexOf(parameter);if(pos>-1)self.query.parameters.splice(pos,1)};self.resetFilter=function(){if(!self.query)self.query={};self.query.parameters=[];self.sorting=self.sortOptions[0].value};self.toggleFilterPanel=function(){self.showFilters=!self.showFilters};self.isFilterOn=function(){return self.query&&self.query.parameters&&self.query.parameters.length};self.scrollToGame=function(game){if(self.sections.all_games)self.collapseSection("all_games");if(self.view==self.GRID_VIEW){for(var i=0;i<self.filtered.length;i++){var item=self.filtered[i];if(item==game){self.currentPage=parseInt(i/self.itemsPerPage)+1;$timeout(function(){var target=$("#game"+game.id);if(!target.length)return;var body=$("body,html");body.animate({scrollTop:target.offset().top-50-body.height()/2+target.height()/2})});break}}}else if(self.view==self.LIST_VIEW){$timeout(function(){var target=$("#game"+game.id);if(!target.length)return;var list=$("#game-list");list.animate({scrollTop:list.scrollTop()+target.position().top+50-list.height()/2+target.height()/2})})}};self.collapseSection=function(sectionKey){var collapsed=!self.sections[sectionKey];self.sections[sectionKey]=collapsed;$cookies[sectionKey]=collapsed?1:0;if(sectionKey=="statistics"&&!collapsed){$timeout(function(){self.chart.instance.resize(self.chart.instance.render,true)})}};self.changeTheme=function(){$scope.changeStyle();self.updateChart()};self.refreshSuggestions=function(event){event.stopPropagation();gameService.refreshSuggestions(self.userId)};self.updateChart=function(){var stats=self.chart.orderBy(self.chart.xAxis(self.chart.yAxis));var labels=[];var values=[];angular.forEach(stats,function(dataPoint){labels.push(dataPoint.label);values.push(dataPoint.value)});var data={labels:labels,datasets:[{fillColor:"rgba(151,187,205,0.2)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",pointHighlightFill:"#fff",pointHighlightStroke:"rgba(151,187,205,1)",data:values}]};var ctx=document.getElementById("stats-chart").getContext("2d");var options={animation:false,responsive:true,scaleBeginsAtZero:true,pointHitDetectionRadius:5,scaleFontColor:$scope.globalOptions.darkStyle?"#fff":"#333"};if(self.chart.instance)self.chart.instance.destroy();self.chart.instance=new Chart(ctx).Line(data,options)};self.initChart=function(){var getPlaytimes=function(games){var playtimes=[];angular.forEach(games,function(game){if(game.hasPlaytime())playtimes.push(moment.duration(game.playtime).asHours())});return playtimes};var getRatings=function(games){var ratings=[];angular.forEach(games,function(game){if(game.hasRating())ratings.push(game.rating)});return ratings};self.chart={instance:null,xAxis:null,yAxis:null,orderBy:null,xOptions:[{name:"Genre",value:function(valueFn){var stats=[];angular.forEach(gameService.genres,function(genre){var gamesInCategory=$filter("filter")(gameService.getOwnedGames(),function(game){return game.genre_ids.indexOf(genre.id)>-1});stats.push({label:genre.name,value:valueFn(gamesInCategory)})});return stats}},{name:"Platform",value:function(valueFn){var stats=[];angular.forEach(gameService.platforms,function(platform){var gamesInCategory=$filter("filter")(gameService.getOwnedGames(),function(game){return game.platform_ids.indexOf(platform.id)>-1});stats.push({label:platform.name,value:valueFn(gamesInCategory)})});return stats}},{name:"Tag",value:function(valueFn){var stats=[];angular.forEach(gameService.tags,function(tag){var gamesInCategory=$filter("filter")(gameService.getOwnedGames(),function(game){return game.tag_ids.indexOf(tag.id)>-1});stats.push({label:tag.name,value:valueFn(gamesInCategory)})});return stats}},{name:"Year",value:function(valueFn){var stats=[];angular.forEach(gameService.getYears(),function(year){var gamesInCategory=$filter("filter")(gameService.getOwnedGames(),function(game){return game.year==year});stats.push({label:year,value:valueFn(gamesInCategory)})});return stats}}],yOptions:[{name:"Games",group:"Quantity",value:function(games){return games.length}},{name:"Completed games",group:"Quantity",value:function(games){return games.reduce(function(count,game){return game.finished==gameService.FINISHED?count+1:count},0)}},{name:"Average playtime",group:"Playtime",value:function(games){var playtimes=getPlaytimes(games);if(!playtimes.length)return 0;return playtimes.reduce(function(sum,playtime){return sum+playtime},0)/playtimes.length}},{name:"Median playtime",group:"Playtime",value:function(games){var playtimes=getPlaytimes(games);if(!playtimes.length)return 0;var sorted=$filter("orderBy")(playtimes);var half=Math.floor(sorted.length/2);return sorted.length%2?sorted[half]:(sorted[half-1]+sorted[half])/2}},{name:"Maximum playtime",group:"Playtime",value:function(games){return getPlaytimes(games).reduce(function(max,playtime){return Math.max(playtime,max)},0)}},{name:"Average rating",group:"Rating",value:function(games){var ratings=getRatings(games);if(!ratings.length)return 0;return ratings.reduce(function(sum,rating){return sum+rating},0)/ratings.length}},{name:"Maximum rating",group:"Rating",value:function(games){return getRatings(games).reduce(function(max,rating){return Math.max(rating,max)},0)}}],orderOptions:[{name:"Category",value:function(stats){return $filter("orderBy")(stats,"label")}},{name:"Value",value:function(stats){return $filter("orderBy")(stats,"value")}}]};self.chart.xAxis=self.chart.xOptions[0].value;self.chart.yAxis=self.chart.yOptions[0].value;self.chart.orderBy=self.chart.orderOptions[0].value};self.init=function(){self.finishedOptions=[{name:"Completed",value:1},{name:"Not completed",value:0},{name:"Shelved",value:3},{name:"N/A",value:2}];self.sortOptions=[{name:"Sort by title, asc.",value:"sort_as"},{name:"Sort by title, desc.",value:"-sort_as"},{name:"Sort by year, asc.",value:["year","sort_as"]},{name:"Sort by year, desc.",value:[function(game){return game.year!=null?-game.year:Number.MAX_VALUE},"sort_as"]},{name:"Sort by rating, asc.",value:["rating","sort_as"]},{name:"Sort by rating, desc.",value:[function(game){return game.hasRating()?-game.rating:Number.MAX_VALUE},"sort_as"]},{name:"Sort by playtime, asc.",value:[function(game){return game.hasPlaytime()?game.playtimeAsInt():Number.MAX_VALUE},"sort_as"]},{name:"Sort by playtime, desc.",value:[function(game){return game.hasPlaytime()?-game.playtimeAsInt():Number.MAX_VALUE},"sort_as"]}];self.sections={currently_playing:$cookies.currently_playing==1,queue:$cookies.queue==1,all_games:$cookies.all_games==1,statistics:$cookies.statistics==1,suggestions:$cookies.suggestions==1};self.offset=0;self.itemsPerPage=18;self.currentPage=1;self.showFilters=false;self.selectedGame=null;self.GRID_VIEW=1;self.LIST_VIEW=2;self.view=$cookies.view?$cookies.view:self.LIST_VIEW;self.gameService=gameService;self.initFilter();self.resetFilter();self.initChart();if(!$routeParams.userId){gameService.refreshConfig().then(function(){self.userId=gameService.config.default_user.id;$location.path("/"+self.userId).replace()});return}self.userId=$routeParams.userId;var dataLoaded=function(){if($routeParams.gameId){angular.forEach(gameService.getOwnedGames(),function(game){if(game.id==$routeParams.gameId)self.gameSelected(game)})}$timeout(function(){self.updateChart()})};if(!gameService.initialized){gameService.logIn();var promise=gameService.refreshAll(self.userId);promise.then(dataLoaded)}else{dataLoaded()}$scope.$watch(function(){return self.currentPage},function(){self.pageChanged()})};self.init()}]);angular.module("games").controller("globalCtrl",["$scope","$cookies",function($scope,$cookies){$scope.globalOptions={darkStyle:true};$scope.changeStyle=function(){$scope.globalOptions.darkStyle=!$scope.globalOptions.darkStyle;$cookies.darkStyle=$scope.globalOptions.darkStyle?1:0};this.init=function(){$scope.globalOptions.darkStyle=$cookies.darkStyle==1};this.init()}]);angular.module("games").controller("linkCtrl",["$scope","$modalInstance","url",function($scope,$modalInstance,url){$scope.url=url}]);angular.module("games").controller("loginFormCtrl",["$scope","$modalInstance","gameService",function($scope,$modalInstance,gameService){$scope.loginClick=function(){$scope.loginError=false;gameService.logIn($scope.loginForm.username,$scope.loginForm.password).then(function(){$scope.resetForm();$modalInstance.close()},function(){$scope.loginError=true})};$scope.cancelClick=function(){$scope.resetForm();$modalInstance.dismiss()};$scope.resetForm=function(){$scope.loginError=false;$scope.loginForm={username:"",password:""}};$scope.resetForm()}]);angular.module("games").controller("manageFormCtrl",["$scope","$modalInstance","$filter","Entities","items","gameService","$q",function($scope,$modalInstance,$filter,Entities,items,gameService,$q){$scope.initialize=function(){$scope.form={};$scope.originalItems=items;$scope.items=angular.copy(items);$scope.type=Entities.prototype.type;$scope.error=null;$scope.STATE_UNCHANGED=1;$scope.STATE_ADDED=2;$scope.STATE_UPDATED=3;$scope.STATE_DELETED=4;angular.forEach($scope.items,function(item){item.state=$scope.STATE_UNCHANGED});$scope.items=$filter("orderBy")($scope.items,"name")};$scope.addClick=function(){var item=new Entities($scope.form);item.state=$scope.STATE_ADDED;$scope.items.push(item);$scope.form={}};$scope.deleteClick=function(item){if(item.state==$scope.STATE_ADDED)$scope.items.splice($scope.items.indexOf(item));else item.state=$scope.STATE_DELETED};$scope.nameChange=function(item){if(item.state!=$scope.STATE_ADDED)item.state=$scope.STATE_UPDATED;item.short_name=item.name};$scope.shortNameChange=function(item){if(item.state!=$scope.STATE_ADDED)item.state=$scope.STATE_UPDATED};$scope.saveClick=function(){var requests=[];angular.forEach($scope.items,function(item){switch(item.state){case $scope.STATE_ADDED:requests.push(item.$save({userId:gameService.authenticatedUser.id},function(data){$scope.originalItems.push(data)}));break;case $scope.STATE_UPDATED:requests.push(item.$update(function(data){angular.forEach($scope.originalItems,function(originalItem){if(originalItem.id==item.id)angular.copy(data,originalItem)})}));break;case $scope.STATE_DELETED:requests.push(item.$delete(function(){var pos=$scope.originalItems.reduce(function(ret,originalItem,index){return originalItem.id==item.id?index:ret},-1);if(pos>-1)$scope.originalItems.splice(pos,1);var ids=Entities.prototype.ids;angular.forEach(gameService.games,function(game){var pos=game[ids].reduce(function(ret,id,index){return item.id==id?index:ret},-1);if(pos>-1)game[ids].splice(pos,1)})}));break}});$q.all(requests).then(function(){$modalInstance.close()},function(){$scope.error="Could not save all items. Please check that all fields are filled out."})};$scope.cancelClick=function(){$modalInstance.dismiss()};$scope.canSave=function(){for(var i=0;i<$scope.items.length;i++){var item=$scope.items[i];if(!item.name||!item.short_name)return false}return true};$scope.closeAlert=function(){$scope.error=null};$scope.initialize()}]);angular.module("games").controller("queueFormCtrl",["$scope","$modalInstance","$filter","games","property","gameService","$q",function($scope,$modalInstance,$filter,games,property,gameService,$q){$scope.initialize=function(){$scope.games=angular.copy(games);$scope.property=property;$scope.filterObject={};$scope.filterObject[property]="!!";$scope.error=null;$scope.rewriteQueue()};$scope.rewriteQueue=function(){$scope.games=$filter("orderBy")($scope.games,[$scope.property,"sort_as"]);var position=0;angular.forEach($scope.games,function(game){if(game[property]!=null)game[property]=position++})};$scope.getMaxPosition=function(){return $scope.games.reduce(function(ret,item){return item[property]==null?ret:ret+1},0)-1};$scope.move=function(game,position){angular.forEach($scope.games,function(item){if(item==game||item[property]==null)return;if(item[property]>game[property])item[property]--;if(item[property]>=position)item[property]++});game[property]=position};$scope.moveUpClick=function(game){if(game[property]==0)$scope.move(game,$scope.getMaxPosition());else $scope.move(game,game[property]-1)};$scope.moveDownClick=function(game){if(game[property]==$scope.getMaxPosition())$scope.move(game,0);else $scope.move(game,game[property]+1)};$scope.removeClick=function(game){angular.forEach($scope.games,function(item){if(item!=game&&item[property]!=null&&item[property]>=game[property])item[property]--});game[property]=null};$scope.saveClick=function(){$scope.rewriteQueue();var promises=[];angular.forEach($scope.games,function(game){angular.forEach(gameService.games,function(originalGame){if(originalGame.id==game.id){originalGame[property]=game[property];promises.push(originalGame.$update())}})});$q.all(promises).then(function(){$modalInstance.close()},function(){$scope.error="Could not save all positions. Please try again."})};$scope.cancelClick=function(){$modalInstance.dismiss()};$scope.closeAlert=function(){$scope.error=null};$scope.initialize()}]);angular.module("games").controller("settingsFormCtrl",["$scope","$modalInstance","gameService","Settings",function($scope,$modalInstance,gameService,Settings){$scope.initialize=function(){$scope.gameService=gameService;$scope.model=Settings.get()};$scope.saveClick=function(){$scope.model.$update().then(function(){gameService.refreshConfig().then(function(){$modalInstance.close()})},function(){$scope.error=true})};$scope.cancelClick=function(){$modalInstance.dismiss()};$scope.closeAlert=function(){$scope.error=false};$scope.initialize()}]);angular.module("games").directive("bindElement",function(){return{restrict:"A",scope:{bindElement:"="},link:function(scope,elem){scope.bindElement=elem}}});angular.module("games").directive("game",["gameService","$filter",function(gameService,$filter){return{restrict:"E",templateUrl:"game.html",scope:{game:"=",editCallback:"&",linkCallback:"&",height:"@"},link:function($scope){$scope.heightStyle=$scope.height?{height:$scope.height}:{};$scope.gameService=gameService;$scope.getGenres=function(){return $filter("filter")(gameService.genres,function(genre){return $scope.game.genre_ids.indexOf(genre.id)>-1})};$scope.getPlatforms=function(){return $filter("filter")(gameService.platforms,function(platform){return $scope.game.platform_ids.indexOf(platform.id)>-1})};$scope.getTags=function(){return $filter("filter")(gameService.tags,function(tag){return $scope.game.tag_ids.indexOf(tag.id)>-1})}}}}]);angular.module("games").directive("statsPanel",function(){return{templateUrl:"stats.html",scope:{panelTitle:"@",key:"@",value:"@",items:"=",filterBy:"=",orderBy:"=",descending:"@",onClick:"&"},link:function($scope,element,attributes){$scope.itemsPerPage=10;$scope.pageChanged=function(){$scope.offset=$scope.currentPage*$scope.itemsPerPage-$scope.itemsPerPage};$scope.itemClicked=function(item){$scope.onClick({item:item})}}}});angular.module("games").directive("validateTimespan",function(){return{require:"ngModel",link:function(scope,element,attributes,modelCtrl){var regex=/^\d*:\d{2}:\d{2}$/;modelCtrl.$validators.timespan=function(modelValue,viewValue){if(modelCtrl.$isEmpty(viewValue))return true;return regex.test(viewValue)}}}}).directive("validateYear",function(){return{require:"ngModel",link:function(scope,element,attributes,modelCtrl){var regex=/^\d+$/;modelCtrl.$validators.year=function(modelValue,viewValue){if(modelCtrl.$isEmpty(viewValue))return true;return regex.test(viewValue)}}}});angular.module("games").factory("Games",["$resource","upload","$http",function($resource,upload,$http){var Games=$resource("api/users/:userId/games/:id",{id:"@id",userId:"@user_id"},{query:{method:"GET",isArray:true,transformResponse:function(data){var games=angular.fromJson(data);angular.forEach(games,function(game){initializeGame(game)});return games}},get:{method:"GET",isArray:false,transformResponse:function(data){var game=angular.fromJson(data);return initializeGame(game)}},save:{method:"POST",transformResponse:function(data){var game=angular.fromJson(data);return initializeGame(game)}},update:{method:"PUT",transformResponse:function(data){var game=angular.fromJson(data);return initializeGame(game)}}});var initializeGame=function(game){game.decachedImage=game.image;if(game.title){var splitter=": ";var splitterPos=game.title.indexOf(splitter);if(splitterPos>-1){game.mainTitle=game.title.substr(0,splitterPos);game.subTitle=game.title.substr(splitterPos+splitter.length)}else game.mainTitle=game.title}return game};Games.prototype.uploadImage=function(image){var self=this;return upload({url:"api/users/"+self.user_id+"/games/"+self.id+"/image",method:"POST",data:{image:image}}).then(function(response){var data=response.data;self.image=data.image;self.decachedImage=self.image+"?q="+(new Date).getTime()})};Games.prototype.uploadExternalImage=function(url){var self=this;return $http.post("api/users/"+self.user_id+"/games/"+self.id+"/image",{image_url:url}).then(function(response){var data=response.data;self.image=data.image;self.decachedImage=self.image+"?q="+(new Date).getTime()})};Games.prototype.deleteImage=function(){var self=this;return $http.delete("api/users/"+self.user_id+"/games/"+self.id+"/image").success(function(){self.image=null;self.decachedImage=null})};Games.prototype.playtimeAsInt=function(){if(!this.hasPlaytime())return 0;return parseInt(this.playtime.split(":").join(""))};Games.prototype.hasPlaytime=function(){return this.playtime&&this.playtime!="00:00:00"};Games.prototype.hasRating=function(){return this.rating!=null};Games.prototype.isOnWishlist=function(){return this.wishlist_position!==null};Games.prototype.isInQueue=function(){return this.queue_position!==null};Games.prototype.getPlaytimeDisplay=function(){if(!this.playtime)return"";var split=this.playtime.split(":");var hours=split[0];var mins=split[1];if(hours.indexOf("00")==0)hours="";else if(hours.indexOf("0")==0)hours=hours.substr(1)+" hours";else hours=hours+" hours";if(mins.indexOf("00")==0)mins="";else if(mins.indexOf("0")==0)mins=mins.substr(1)+" mins";else mins=mins+" mins";return hours+" "+mins};return Games}]);angular.module("games").factory("Users",["$resource",function($resource){var Users=$resource("api/users/:id",{id:"@id"},{update:{method:"PUT"}});return Users}]);angular.module("games").factory("Genres",["$resource",function($resource){var Genres=$resource("api/users/:userId/genres/:id",{id:"@id",userId:"@user_id"},{update:{method:"PUT"}});Genres.prototype.type="genre";Genres.prototype.ids="genre_ids";return Genres}]).factory("Platforms",["$resource",function($resource){var Platforms=$resource("api/users/:userId/platforms/:id",{id:"@id",userId:"@user_id"},{update:{method:"PUT"}});Platforms.prototype.type="platform";Platforms.prototype.ids="platform_ids";return Platforms}]).factory("Tags",["$resource",function($resource){var Tags=$resource("api/users/:userId/tags/:id",{id:"@id",userId:"@user_id"},{update:{method:"PUT"}});Tags.prototype.type="tag";Tags.prototype.ids="tag_ids";return Tags}]).factory("Config",["$resource",function($resource){var Config=$resource("api/config");return Config}]).factory("Settings",["$resource",function($resource){var Settings=$resource("api/settings",{},{update:{method:"PUT"}});return Settings}]);angular.module("games").filter("offset",function(){return function(items,start){return items.slice(start)}});angular.module("games").filter("search",["gameService",function(gameService){return function(games,query){var search=query.search?query.search.toLowerCase():false;var filtered=[];angular.forEach(games,function(game){if(search){var title=game.title&&game.title.toLowerCase().indexOf(search)>=0;var sort=game.sort_as&&game.sort_as.toLowerCase().indexOf(search)>=0;var dev=game.developer&&game.developer.toLowerCase().indexOf(search)>=0;var pub=game.publisher&&game.publisher.toLowerCase().indexOf(search)>=0;var comm=game.comment&&game.comment.toLowerCase().indexOf(search)>=0;if(!title&&!sort&&!dev&&!pub&&!comm)return}var matches=true;angular.forEach(query.parameters,function(param){if(!matches||!param.type||param.value===null||param.value==="")return;if(param.type==gameService.FILTER_PLATFORM&&game.platform_ids.indexOf(param.value)<0){matches=false}else if(param.type==gameService.FILTER_GENRE&&game.genre_ids.indexOf(param.value)<0){matches=false}else if(param.type==gameService.FILTER_TAG&&game.tag_ids.indexOf(param.value)<0){matches=false}else if(param.type==gameService.FILTER_YEAR&&(game.year==null||game.year!=param.value)){matches=false}else if(param.type==gameService.FILTER_YEAR_MIN&&(game.year==null||game.year<param.value)){matches=false}else if(param.type==gameService.FILTER_YEAR_MAX&&(game.year==null||game.year>param.value)){matches=false}else if(param.type==gameService.FILTER_COMPLETION&&game.finished!=param.value){matches=false}else if(param.type==gameService.FILTER_RATING&&(game.rating==null||game.rating!=param.value)){matches=false}else if(param.type==gameService.FILTER_RATING_MIN&&(game.rating==null||game.rating<param.value)){matches=false}else if(param.type==gameService.FILTER_RATING_MAX&&(game.rating==null||game.rating>param.value)){matches=false;
}else if(param.type==gameService.FILTER_TITLE&&game.title.toLowerCase().indexOf(param.value)<0){matches=false}if(param.negate)matches=!matches});if(matches)filtered.push(game)});return filtered}}]);angular.module("games").service("gameService",["Games","Genres","Platforms","Tags","Users","$q","$routeParams","$http","$filter","Config",function(Games,Genres,Platforms,Tags,Users,$q,$routeParams,$http,$filter,Config){var self=this;self.refreshGames=function(userId){return Games.query({userId:userId}).$promise.then(function(data){self.games=data})};self.refreshGenres=function(userId){return Genres.query({userId:userId}).$promise.then(function(data){self.genres=data})};self.refreshPlatforms=function(userId){return Platforms.query({userId:userId}).$promise.then(function(data){self.platforms=data})};self.refreshTags=function(userId){return Tags.query({userId:userId}).$promise.then(function(data){self.tags=data})};self.refreshUsers=function(){return Users.query().$promise.then(function(data){self.users=data})};self.refreshSuggestions=function(userId){return $http.get("api/users/"+userId+"/suggestions").success(function(data){self.suggestions=data})};self.refreshConfig=function(){return Config.get().$promise.then(function(data){self.config=data})};self.refreshAll=function(userId){self.resetAll();return $q.all([self.refreshGames(userId),self.refreshGenres(userId),self.refreshPlatforms(userId),self.refreshTags(userId),self.refreshSuggestions(userId),self.refreshUsers(),self.refreshConfig()]).then(function(){self.initialized=true})};self.resetAll=function(){self.initialized=false;self.games=[];self.genres=[];self.platforms=[];self.tags=[];self.suggestions=[];self.users=[];self.config=null};self.logIn=function(username,password){var url="api/login";if(!username&&!password){return $http.get(url).then(function(response){var data=response.data;self.authenticated=true;self.authenticatedUser=data;return data})}return $http.post(url,{username:username,password:password}).then(function(response){var data=response.data;self.authenticated=true;self.authenticatedUser=data;return data})};self.logOut=function(){return $http.post("api/logout").then(function(){self.authenticated=false;self.authenticatedUser=null})};self.assistedCreationSearch=function(search){return $http.get("api/assisted/search/"+encodeURIComponent(search)).then(function(response){return response.data})};self.assistedCreationGetGame=function(id){return $http.get("api/assisted/game/"+id).then(function(response){return response.data})};self.isGameVisible=function(game){return!game.hidden||self.authenticated&&self.authenticatedUser.id==game.user_id};self.getOwnedGames=function(){return $filter("filter")(self.games,function(game){if(game.isOnWishlist())return false;return self.isGameVisible(game)})};self.getWishlistGames=function(){return $filter("filter")(self.games,function(game){if(!game.isOnWishlist())return false;return self.isGameVisible(game)})};self.getQueuedGames=function(){return $filter("filter")(self.getOwnedGames(),function(game){return game.isInQueue()})};self.getFinishedGames=function(){return $filter("filter")(self.getOwnedGames(),function(game){return game.finished==self.FINISHED})};self.getUnfinishedGames=function(){return $filter("filter")(self.getOwnedGames(),function(game){return game.finished!=self.FINISHED})};self.getYears=function(){var years=[];angular.forEach(self.getOwnedGames(),function(game){if(game.year&&years.indexOf(game.year)<0)years.push(game.year)});return years};self.countFinished=function(){return self.getOwnedGames().reduce(function(count,game){return game.finished==self.FINISHED?count+1:count},0)};self.countFinishedPct=function(){return Math.round(self.countFinished()/self.getOwnedGames().length*100)};self.countGenre=function(genre){return self.getOwnedGames().reduce(function(count,game){return game.genre_ids.indexOf(genre.id)>-1?count+1:count},0)};self.countPlatform=function(platform){return self.getOwnedGames().reduce(function(count,game){return game.platform_ids.indexOf(platform.id)>-1?count+1:count},0)};self.countTag=function(tag){return self.getOwnedGames().reduce(function(count,game){return game.tag_ids.indexOf(tag.id)>-1?count+1:count},0)};self.isInSuggestions=function(game){return self.suggestions.reduce(function(ret,suggestion){return ret||suggestion.game_id==game.id},false)};self.FILTER_TITLE=1;self.FILTER_PLATFORM=2;self.FILTER_GENRE=3;self.FILTER_TAG=4;self.FILTER_YEAR=5;self.FILTER_RATING=6;self.FILTER_COMPLETION=7;self.FILTER_TITLE=8;self.FILTER_YEAR_MIN=9;self.FILTER_YEAR_MAX=10;self.FILTER_RATING_MIN=11;self.FILTER_RATING_MAX=12;self.NOT_FINISHED=0;self.FINISHED=1;self.FINISHED_NA=2;self.SHELVED=3;self.authenticated=false;self.authenticatedUser=null;self.resetAll()}]);
//# sourceMappingURL=g.min.js.map